basePath: /api/v1
definitions:
  api.ActivityResponse:
    properties:
      posts:
        items:
          $ref: '#/definitions/api.Post'
        type: array
    type: object
  api.AddTransactionRequest:
    properties:
      amount:
        type: number
      blockchain:
        type: string
      currency:
        type: string
      message:
        maxLength: 200
        type: string
      name:
        type: string
      receiver_id:
        type: integer
      receiver_pk:
        type: string
      sender_id:
        type: integer
      sender_pk:
        type: string
      show_type:
        enum:
        - Public
        - Private
        - Friend
        type: string
      status:
        type: string
      symbol:
        type: string
      transaction_type:
        type: string
    required:
    - amount
    - blockchain
    - name
    - show_type
    - symbol
    type: object
  api.Post:
    properties:
      moment:
        $ref: '#/definitions/entity.Moment'
      transaction:
        $ref: '#/definitions/entity.Transaction'
      type:
        type: string
    type: object
  api.Transaction:
    properties:
      amount:
        type: string
      blockchain:
        type: string
      currency:
        type: string
      id:
        type: integer
      message:
        type: string
      name:
        type: string
      receiver_id:
        type: integer
      receiver_pk:
        type: string
      receiver_url:
        type: string
      sender_id:
        type: integer
      sender_pk:
        type: string
      sender_url:
        type: string
      status:
        type: string
      symbol:
        type: string
      transaction_type:
        type: string
    type: object
  api.TransactionResponse:
    properties:
      transaction:
        $ref: '#/definitions/api.Transaction'
    type: object
  api.UpdateTransactionRequest:
    properties:
      message:
        maxLength: 200
        type: string
      name:
        type: string
      show_type:
        enum:
        - Public
        - Private
        - Friend
        type: string
      status:
        type: string
    required:
    - name
    - show_type
    type: object
  entity.Moment:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      message:
        maxLength: 200
        type: string
      updatedAt:
        type: string
      url:
        type: string
      user_ref:
        type: integer
    required:
    - message
    type: object
  entity.News:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      preview_description:
        type: string
      preview_image:
        type: string
      preview_name:
        type: string
      preview_url:
        type: string
      source:
        type: string
      title:
        type: string
      updatedAt:
        type: string
      url:
        type: string
    required:
    - source
    - title
    - url
    type: object
  entity.Transaction:
    properties:
      amount:
        type: number
      blockchain:
        type: string
      createdAt:
        type: string
      currency:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      message:
        maxLength: 200
        type: string
      name:
        type: string
      receiver_id:
        type: integer
      receiver_pk:
        type: string
      sender_id:
        type: integer
      sender_pk:
        type: string
      show_type:
        type: string
      status:
        type: string
      symbol:
        type: string
      transaction_type:
        type: string
      updatedAt:
        type: string
    required:
    - amount
    - blockchain
    - name
    - receiver_pk
    - sender_pk
    - symbol
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
host: localhost:8080
info:
  contact:
    email: support@melonnetwork.io
    name: API Support
    url: https://melonnetwork.io
  description: This is backend server for Melon Wallet..
  title: Melon Wallet Service API
  version: "1.0"
paths:
  /activity:
    get:
      consumes:
      - application/json
      description: List activities of an account
      operationId: list-activities
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.ActivityResponse'
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - ApiKeyAuth: []
      summary: List activities of an account
      tags:
      - activities
  /activity/query:
    get:
      consumes:
      - application/json
      description: Query activities of an account
      operationId: query-activities
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: page number
        in: query
        name: page
        type: string
      - description: page size
        in: query
        name: per_page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.Post'
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - ApiKeyAuth: []
      summary: Query activities of an account
      tags:
      - activities
  /news/query:
    get:
      consumes:
      - application/json
      description: Query news by page
      operationId: query-news
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: page number
        in: query
        name: page
        type: string
      - description: page size
        in: query
        name: per_page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.News'
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - ApiKeyAuth: []
      summary: Query news by page
      tags:
      - news
  /transaction:
    delete:
      consumes:
      - application/json
      description: Delete a transaction
      operationId: delete-transaction
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.TransactionResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete a transaction
      tags:
      - transactions
    get:
      consumes:
      - application/json
      description: List all transactions of requester
      operationId: list-transactions
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.TransactionResponse'
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: List all transactions of requester
      tags:
      - transactions
    post:
      consumes:
      - application/json
      description: Add a transaction to account
      operationId: add-transaction
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Transaction Data
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/api.AddTransactionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.TransactionResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Add a transaction to account
      tags:
      - transactions
    put:
      consumes:
      - application/json
      description: Update a transaction
      operationId: update-transaction
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Transaction Data
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/api.UpdateTransactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.TransactionResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update a transaction
      tags:
      - transactions
  /transaction/:id:
    get:
      consumes:
      - application/json
      description: Get a transaction
      operationId: get-transaction
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.TransactionResponse'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - ApiKeyAuth: []
      summary: Get a transaction
      tags:
      - transactions
  /transaction/query/:id:
    get:
      consumes:
      - application/json
      description: Query requester's transactions by page
      operationId: query-transactions
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: page number
        in: query
        name: page
        type: string
      - description: page size
        in: query
        name: per_page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.TransactionResponse'
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - ApiKeyAuth: []
      summary: Query requester's transactions by page
      tags:
      - transactions
  /transaction/user/:id:
    get:
      consumes:
      - application/json
      description: List all transactions of an account
      operationId: list-transactions-by-user
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.TransactionResponse'
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: List all transactions of an account
      tags:
      - transactions
swagger: "2.0"
