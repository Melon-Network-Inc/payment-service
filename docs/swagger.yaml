definitions:
  api.AddFriendRequest:
    properties:
      user_id:
        type: string
      username:
        maxLength: 30
        minLength: 2
        type: string
    required:
    - username
    type: object
  api.AddTransactionRequest:
    properties:
      amount:
        type: number
      currency:
        type: string
      message:
        maxLength: 200
        type: string
      name:
        type: string
      receiver_id:
        type: integer
      receiver_pk:
        type: string
      sender_id:
        type: integer
      sender_pk:
        type: string
      show_type:
        enum:
        - Public
        - Private
        - Friend
        type: string
      status:
        type: string
    required:
    - amount
    - currency
    - name
    - show_type
    type: object
  api.CreateUserRequest:
    properties:
      avatar:
        type: string
      email:
        type: string
      password:
        minLength: 8
        type: string
      phone:
        type: string
      username:
        maxLength: 30
        minLength: 2
        type: string
    required:
    - email
    - password
    - username
    type: object
  api.UpdateTransactionRequest:
    properties:
      message:
        maxLength: 200
        type: string
      name:
        type: string
      show_type:
        enum:
        - Public
        - Private
        - Friend
        type: string
      status:
        type: string
    required:
    - name
    - show_type
    type: object
  api.UpdateUserRequest:
    properties:
      avatar:
        type: string
      email:
        type: string
      phone:
        type: string
    type: object
  api.UpdateUserStatusRequest:
    properties:
      id:
        type: string
    type: object
  entity.FriendRequest:
    properties:
      createdAt:
        type: string
      creator_ref:
        type: integer
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      receiver_ref:
        type: integer
      status:
        type: string
      updatedAt:
        type: string
    type: object
  friend.FriendRequest:
    properties:
      createdAt:
        type: string
      creator_ref:
        type: integer
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      receiver_ref:
        type: integer
      status:
        type: string
      updatedAt:
        type: string
    type: object
  friend.User:
    properties:
      avatar:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      is_disabled:
        type: boolean
      last_login:
        type: string
      password:
        type: string
      phone:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    required:
    - phone
    type: object
  github.com_Melon-Network-Inc_payment-service_pkg_transaction.Transaction:
    properties:
      amount:
        type: number
      createdAt:
        type: string
      currency:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      message:
        maxLength: 200
        type: string
      name:
        type: string
      receiver_id:
        type: integer
      receiver_pk:
        type: string
      sender_id:
        type: integer
      sender_pk:
        type: string
      show_type:
        type: string
      status:
        type: string
      updatedAt:
        type: string
    required:
    - amount
    - currency
    - name
    - receiver_pk
    - sender_pk
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  pkg_transaction.Transaction:
    properties:
      amount:
        type: number
      createdAt:
        type: string
      currency:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      message:
        maxLength: 200
        type: string
      name:
        type: string
      receiver_id:
        type: integer
      receiver_pk:
        type: string
      sender_id:
        type: integer
      sender_pk:
        type: string
      show_type:
        type: string
      status:
        type: string
      updatedAt:
        type: string
    required:
    - amount
    - currency
    - name
    - receiver_pk
    - sender_pk
    type: object
  user.User:
    properties:
      avatar:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      is_disabled:
        type: boolean
      last_login:
        type: string
      password:
        type: string
      phone:
        type: string
      token:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    required:
    - phone
    type: object
info:
  contact: {}
  description: The MelonWallet microservice responsible for dealing with payment and
    crypto transaction information.
  title: Payment Service
  version: "1.0"
paths:
  /account:
    post:
      consumes:
      - application/json
      description: Create a user resource
      operationId: create-user
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/api.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: ""
        "404":
          description: ""
      summary: Create a user resource
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user resource
      operationId: update-user
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/api.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: ""
        "404":
          description: ""
      summary: Update a user resource
      tags:
      - users
  /account/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user resource by ID
      operationId: delete-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "404":
          description: ""
      summary: Delete a user resource by ID
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get a user resource
      operationId: get-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "404":
          description: ""
      summary: Get a user resource
      tags:
      - users
  /account/activate:
    put:
      consumes:
      - application/json
      description: Activate a user resource
      operationId: activate-user
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/api.UpdateUserStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: ""
        "404":
          description: ""
      summary: Activate a user resource
      tags:
      - users
  /account/deactivate:
    put:
      consumes:
      - application/json
      description: Deactivate a user resource
      operationId: deactivate-user
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/api.UpdateUserStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: ""
        "404":
          description: ""
      summary: Deactivate a user resource
      tags:
      - users
  /account/security/{id}:
    put:
      consumes:
      - application/json
      description: Update the password for a user resource
      operationId: update-password
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: ""
        "404":
          description: ""
      summary: Update the password for a user resource
      tags:
      - users
  /friend/{id}:
    delete:
      consumes:
      - application/json
      description: Remove a friend by ID
      operationId: delete-friend
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "404":
          description: ""
      summary: Remove a friend by ID
      tags:
      - friends
  /friend/list:
    get:
      consumes:
      - application/json
      description: List friends of requester
      operationId: list-friends
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/friend.FriendRequest'
            type: array
        "404":
          description: ""
      summary: List friends of requester
      tags:
      - friends
  /friend/list/user/{id}:
    get:
      consumes:
      - application/json
      description: List friend of a user
      operationId: list-friend-request-of-user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/friend.User'
            type: array
        "404":
          description: ""
      summary: List friend of a user
      tags:
      - friends
  /request:
    get:
      consumes:
      - application/json
      description: List friend requests of an account
      operationId: list-friend-request
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.FriendRequest'
            type: array
        "404":
          description: ""
      summary: List friend requests of an account
      tags:
      - requests
    post:
      consumes:
      - application/json
      description: Add friendship with another user
      operationId: add-friend
      parameters:
      - description: FriendRequest Data
        in: body
        name: friend_request
        required: true
        schema:
          $ref: '#/definitions/api.AddFriendRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/friend.FriendRequest'
        "400":
          description: ""
        "404":
          description: ""
      summary: Add friend
      tags:
      - requests
  /request/{id}:
    delete:
      consumes:
      - application/json
      description: Drop a friend request by ID
      operationId: drop-friend-request
      parameters:
      - description: FriendRequest ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "404":
          description: ""
      summary: Drop a friend request by ID
      tags:
      - requests
  /request/confirm/{id}:
    put:
      consumes:
      - application/json
      description: Confirm a friend request by ID
      operationId: confirm-friend-request
      parameters:
      - description: FriendRequest ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/friend.FriendRequest'
        "404":
          description: ""
      summary: Confirm a friend request by ID
      tags:
      - requests
  /request/reject/{id}:
    put:
      consumes:
      - application/json
      description: Reject a friend request by ID
      operationId: reject-friend-request
      parameters:
      - description: FriendRequest ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/friend.FriendRequest'
        "404":
          description: ""
      summary: Reject a friend request by ID
      tags:
      - requests
  /transaction:
    delete:
      consumes:
      - application/json
      description: Delete a transaction
      operationId: delete-transaction
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_transaction.Transaction'
        "400":
          description: ""
        "404":
          description: ""
      summary: Delete a transaction
      tags:
      - transactions
    get:
      consumes:
      - application/json
      description: List all transactiones by an account
      operationId: list-transactions-by-user
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/pkg_transaction.Transaction'
            type: array
        "404":
          description: ""
      summary: List all transactiones by an account
      tags:
      - transactions
    post:
      consumes:
      - application/json
      description: Add a transaction to account
      operationId: add-transaction
      parameters:
      - description: Transaction Data
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/api.AddTransactionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/pkg_transaction.Transaction'
        "400":
          description: ""
        "404":
          description: ""
      summary: Add a transaction to account
      tags:
      - transactions
    put:
      consumes:
      - application/json
      description: Update a transaction
      operationId: update-transaction
      parameters:
      - description: Transaction Data
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/api.UpdateTransactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_transaction.Transaction'
        "400":
          description: ""
        "404":
          description: ""
      summary: Update a transaction
      tags:
      - transactions
  /transaction/{id}:
    get:
      consumes:
      - application/json
      description: Get a transaction
      operationId: get-transaction
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg_transaction.Transaction'
        "404":
          description: ""
      summary: Get a transaction
      tags:
      - transactions
swagger: "2.0"
